# 怼故事投稿 · 操作指南

## 背景

你也不知道什么时候，会成为怼故事的主角兼作者，艰难困苦地写好故事并没有完事，还要投稿。本页在 [怼周刊README.md](https://github.com/DebugUself/du4proto/blob/DUW/README.md)的基础上，详细描述投稿过程。

具体投稿会遇到的问题：怼周刊的项目在 du4proto 的 DUW 分支中进行，需将分支信息拉取到本地，在本地文件编辑故事，确认后推送到分支，以完成投稿。


## 步骤
- 写故事
- 分支投稿
- 告知投稿

### Step1 写故事

- content：
    + 客观详细记录故事现场
    + 解决方案
    + 收录指标：

    有用 ~ 解决真实问题的, 非常虚构内容, 体裁不限制, 尽量提供客观证据/数据/代码...
    有趣 ~ 形式上流畅, 大家看的下去, 也学的上手
    有种 ~ 一定的挑战性, 如果是大家都知道的事儿, 再怎么嗯哼, 也算不上带种,一定要尽力作自己20年后说起来也非常赞的事儿...

    + 参考现有故事：
        * [现有故事1](https://github.com/DebugUself/du4proto/blob/DUW/DU1w_draft.md#故事)
        * [现有故事2](https://github.com/DebugUself/du4proto/commit/d20c50033b163a0678fb39e8a45c57ebbc3d02f0)
- form：
    + .md 

### Step2 分支投稿

- 看分支 DUW（from README.md）
    + 方法1：在 github 中 分支一栏，（默认显示 master），选择 DUW ，code 中显示的是怼周刊的内容。
    + 方法2：点[提示](https://github.com/DebugUself/du4proto/blob/DUW/README.md) 查看。
    + 方法3：将分支拉到本地，用本地编辑器打开查看。如下文。

- 将分支 DUW 获取到本地
    + 方法1：
`$ git branch -a`
`$ git checkout DUW`
`$ git stutas`
> On branch DUW
> Your branch is up-to-date with 'origin/DUW'.
> nothing to commit, working tree clean

- 打开当周 draft.md
    + 将自己的故事放入标题为怼故事的下面。
    + priview 后无误。
    + 提交
     `git add .
     `git commit -m ''
     `git push origin HEAD:DUW`

### Step3 告知投稿
-  在 Issues · DebugUself/du4proto 创建[Weekly] 前缀的 Issue 来通告。
    + 要包含文稿的仓库链接
    + @DebugUself/du0mana

- 列表发送 [Weekly] 前缀的邮件, 并附 .md 格式的文稿


## 注意

- 了解分支的运用。怼周刊项目在分支 DUW 中。


## 总结

写故事、投稿、告知已投稿，一个小小的闭环。

## 故事

@NBR-hugh 同学在[[LOG] 首次快速获取远程仓库分支数据 · Issue #32 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/32)发布：

进一步,利用必荣同学的方案完成一次怼周刊怼故事投放.


### 0.触发

- 现场: [[LOG2w 项目进展提交处 · Issue #39 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/39#issuecomment-293833165)

>俺的期待:
>
> - 这是一则非常经典的 怼故事哪
> - 请主动增补到周刊中:参考 README.md
>    https://github.com/DebugUself/du4proto/blob/DUW/README.md
>DU1w_draft.md
>    https://github.com/DebugUself/du4proto/blob/DUW/DU1w_draft.md



### 1.目标

- 编写怼故事

- 根据 [提示](https://github.com/DebugUself/du4proto/blob/DUW/README.md) 在[DU1w_draft.md](https://github.com/DebugUself/du4proto/blob/DUW/DU1w_draft.md)中添加本次怼故事.


### 2.分析

- 观察现有故事,对自己故事进行编辑

- 将分支信息拉取到本地
- 对本地文件进行编辑
- 确认后推送分支

### 3.行动

#### 3.1 故事编写

- 观摩[现有故事](https://github.com/DebugUself/du4proto/blob/DUW/DU1w_draft.md#故事)模仿编辑
- 特点:
    - 故事大致流程
    - 给出故事具体内容
    - 我直接现场摘录了
- 成稿 -->[add DUstory to DU1w_draft.md · DebugUself/du4proto@d20c500](https://github.com/DebugUself/du4proto/commit/d20c50033b163a0678fb39e8a45c57ebbc3d02f0)

#### 3.2:将分支信息拉取到本地

- 有何参考借鉴?
   - [LOG首次快速获取远程仓库分支数据 · Issue #32 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/32)
- @大猫同学给出解决方案:
    
        git branch -a    
        git checkout -b 本地分支名 远程仓库分支的本地跟踪分支名

- `git branch -a` 
    - `-a`-->all, 显示所有分支名

- `git checkout -b `
    - `git checkout` 切换分支
    - `-b` -->build 同时建立分支
    - 故 `git checkout -b duw origin/DUW`
    
- 大妈提示有更简洁的办法,是什么呢?
  


#### 3.3 修改文件

- command + space --> spotlite search
- 搜索文件名 `DU1w_draft.md`,打开文件
- 添加内容



#### 3.4 确认后推送分支

- `git add .`
- `git diff HEAD`
- `git commit -m "add DUstory to DU1w_draft.md"`
- `git push`
    - 错误提示:

> fatal: The upstream branch of your current branch does not match the name of your current branch.  To push to the upstream branch on the remote, use

            git push origin HEAD:DUW
            
>To push to the branch of the same name on the remote, use

            git push origin duw

- `git push origin duw`
    - 这是在远程仓库新建分支 duw
    - 所以这是错误产生的仓库,需要删除,参考[Git - 远程分支](https://git-scm.com/book/zh/v1/Git-%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF)
    - `git push [远程名] :[分支名]`
    - 即 `git push origin :duw `
    - 提示:冒号前面一定要留有空格
- `git push origin HEAD:DUW`
    - 这是将commit到HEAD 区的内容 推送到 DUW 分支
    - 这是正确的命令
- 如此,完成一次怼故事的添加.


## 共同增补渠道
- 可在[Editing How2gitDUW · DebugUself/du4proto Wiki](https://github.com/DebugUself/du4proto/wiki/How2gitDUW/_edit)直接增补。
- 可在[[42h][TASK][wiki][LOG]怼周刊投稿操作指南，wiki 初稿，请同学们增补指正。 · Issue #46 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/46)提交反馈和意见。


## 关联

[LOG首次快速获取远程仓库分支数据 · Issue #32 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/32)

[[42h][TASK][wiki][LOG]怼周刊投稿操作指南，wiki 初稿，请同学们增补指正。 · Issue #46 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/46)

## Changelog
- 2017-04-19 Liguanghe 按照 issue 指南的格式修改,添加增补渠道及用时记录 20 min
- 2017-04-19 Liguanghe 发布 wiki 及 小密圈 46 min
- 2017-04-18 Liguanghe 按大妈的建议和框架改写 120 min
- 2017-04-18 Liguanghe 草稿及发小密圈公告 120 min



