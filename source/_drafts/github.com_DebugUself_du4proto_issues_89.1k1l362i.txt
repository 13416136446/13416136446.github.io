纪要:
## 同学分享:
@zhangshiyinrunwithcc 

@n
- ch1代码重写一遍 120 min
-  用必要难度读三篇文章
    - python 命名规范
    + 知识串联
    + execl
- 时间记录
    + 更换工具, 中断几天
    + 冥想一分钟, 跳出情绪
    + 输出引导输入才有效, 否则就是浪费时间
+ 代码写的太少
    * 下周增加

@fatfox2016 
- 学习状态
    - DL101 的学习进入 chap4 后，深刻感受到在非舒适区学习的挫败感
    - 挫败 1: 在看过视频后，貌似理解诸如 word enbedding,lookup, 卷积, kernel,pooling 等概念，但是无法将其用于完成作业；
    - 挫败 2: 补充资料大多英文，不论是用翻译软件，还是对照字典，都无发准确获知含义；
    - 挫败 3: 临时补习的基础知识，不能内化掌握，对理解深度学习架构、sigmoid、softmax 等算法辅助作用有限；
    - 挫败 4: 不能提出有效问题，仍然停留在伸手等要阶段；
    - 综上原因：焦虑症严重。
- 自怼
- 如何面对陌生知识
    - 官方文档或 wiki
    - 科学上网 google 大法；
    - 提出可交付问题，找人请教；
    - if 想不通，then 立即休息。
    - 怎么学
        + 好为人师，把自己理解的知识写出来，先教自己，再教别人。
        + 从代码入手，使用同学们已完成的作业对比方法，调试实现过程。
        + 遇到似是而非的概念，记录，并反复通过代码调试，并记录每次过程和结果。
        + 时间记录的思考：从时间记录的第二阶段我一直没更新 github,
        + 原因是在思考，重复的记录规律的时间消耗，会不会出现把过程当结果的现象。直到我向 @sunoonlee 
        教练提出一个低质量的问题后，我找到了答案。
- 习惯的养成，是从知道到做到的过程。这个过程需要反复的执行，复盘
```
def try_path(self):
    for i in range(more)：
        if Ture:
            record
            pass
        else:
            try_path(self)
```


@134
- 时间记录
    + 持续四周全部记录
    + atimelog
    + 改进方法, 数据显示效果
    + 尝试结果导向
- 同学项目
    + 同学的分支没有新建
    + 项目也没有新建
    + issue 没有新的  
    + 同学们的问题和项目是什么呢?
- 行动
    + 继续时间记录
    + 余力自动生成每周学习报告
    

@zoom
- 时间记录任务(其实是效率问题)
    + 重要结果: 自怼使用指南
    * 行为和效率对比
    * 公布自己的行为方式, 方便大家协作
        - 举例:大妈使用指南
    * 固定行为,可减少心理内耗
    * 坚持下去
    * 建立工程师模式
- 工具
    + 任何事情可以找到工具来自动化
    + 前提是工具可以和行为配合
    + 了解自己的行为
    + 让工具和行为一起升级
    + eg: 300多个小插件来提高效率的程序员

- github 的使用
    + 怼友 git 的基本命令还不熟悉

- 元技能
    + 识别问题
    + 定义问题
    + 拆解问题
    + 找到资源
    + 完成问题

- 四周任务设定
    - 感知作品
        + 大妈隐藏任务
            * 一些分支, 是大妈故意放在那里, 可以完善的一些小工具
        + 开智 python 往期课里的作品都在 github 里, 也可以 fork 过来完善
    - 自己定开发任务
        + 四周交付
    
