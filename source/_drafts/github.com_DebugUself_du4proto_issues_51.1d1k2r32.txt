### git 
> $ git push origin master
> 大家难道从来没有注意到? 俺的相同操作只有

> $ git st

git st 是 git status 的简写，设置方式：[How do I alias commands in git? - Stack Overflow](http://stackoverflow.com/questions/2553786/how-do-i-alias-commands-in-git)

$ git status 

on branch <>
Your branch is up-to-date with 'origin/master'.
nothing to commit, working tree clean

> $ git ci -am "..."


> 展示代码：
> $ git ci -am 'func for myfuncs'
> [2py axxxxx] func for myfuncs 
> 1 file changes, 1 insertions, 1 deletions

我的测试：

$ git ci
git: 'ci' is not a git command. See 'git --help'.

Did you mean this?
	cz

$ git --help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

**git ci 是 git commit -v / git commit /git commit -a -v 的简写(不知道大妈设置为哪个），设置同上文 git st**




> $ git pl

git pl = git pull 

> $ git pu

git pu = git push

>~ tr_MDP2py4w_1_w1cli_rebuild.html

涵盖 Python 基础的演示。

刚开始，不妨每个改动都commit 一下，print  一下， 演示一下。

### 编辑器
大妈说 vim 是神坑，演示时用的也是 vim。
如何挑选编辑器呢。

### .swp file
确定新的编辑是对的，删除 .swp file






