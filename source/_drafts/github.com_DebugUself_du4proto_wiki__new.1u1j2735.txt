## 1.目标

- 编写怼故事

- 根据 [提示](https://github.com/DebugUself/du4proto/blob/DUW/README.md) 在[DU1w_draft.md](https://github.com/DebugUself/du4proto/blob/DUW/DU1w_draft.md)中添加本次怼故事.


## 2.分析

- 观察现有故事,对自己故事进行编辑

- 将分支信息拉取到本地
- 对本地文件进行编辑
- 确认后推送分支

## 3.行动

### 3.1 故事编写

- 观摩[现有故事](https://github.com/DebugUself/du4proto/blob/DUW/DU1w_draft.md#故事)模仿编辑
- 特点:
    - 故事大致流程
    - 给出故事具体内容
    - 我直接现场摘录了
- 成稿 -->[add DUstory to DU1w_draft.md · DebugUself/du4proto@d20c500](https://github.com/DebugUself/du4proto/commit/d20c50033b163a0678fb39e8a45c57ebbc3d02f0)

### 3.2:将分支信息拉取到本地

- 有何参考借鉴?
   - [[LOG首次快速获取远程仓库分支数据 · Issue #32 · DebugUself/du4proto](https://github.com/DebugUself/du4proto/issues/32)
- @大猫同学给出解决方案:
    
        git branch -a    
        git checkout -b 本地分支名 远程仓库分支的本地跟踪分支名

- `git branch -a` 
    - `-a`-->all, 显示所有分支名

- `git checkout -b `
    - `git checkout` 切换分支
    - `-b` -->build 同时建立分支
    - 故 `git checkout -b duw origin/DUW`
    
- 大妈提示有更简洁的办法,是什么呢?
  


### 3.3 修改文件

- command + space --> spotlite search
- 搜索文件名 `DU1w_draft.md`,打开文件
- 添加内容



### 3.4 确认后推送分支

- `git add .`
- `git diff HEAD`
- `git commit -m "add DUstory to DU1w_draft.md"`
- `git push`
    - 错误提示:

> fatal: The upstream branch of your current branch does not match the name of your current branch.  To push to the upstream branch on the remote, use

            git push origin HEAD:DUW
            
>To push to the branch of the same name on the remote, use

            git push origin duw

- `git push origin duw`
    - 这是在远程仓库新建分支 duw
    - 所以这是错误产生的仓库,需要删除,参考[Git - 远程分支](https://git-scm.com/book/zh/v1/Git-%E5%88%86%E6%94%AF-%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF)
    - `git push [远程名] :[分支名]`
    - 即 `git push origin :duw `
    - 提示:冒号前面一定要留有空格
- `git push origin HEAD:DUW`
    - 这是将commit到HEAD 区的内容 推送到 DUW 分支
    - 这是正确的命令
- 如此,完成一次怼故事的添加.
